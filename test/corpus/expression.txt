===
ident
===

(foo)

---

(source (expr (ident)))

===
number
===

(100)

---

(source (expr (literal_int)))

===
field
===

(m.foo)

---

(source
    (expr
        (field_access
            object: (ident)
            field: (ident))))

===
string-1
===

('')

---

(source (expr (literal_str)))

===
string-2
===

("")

---

(source (expr (literal_str)))

===
string-3
===

('foo')

---

(source (expr (literal_str)))

===
string-4
===

("foo")

---

(source (expr (literal_str)))

===
bool-1
===

(true)

---

(source (expr (literal_bool)))

===
bool-2
===

(false)

---

(source (expr (literal_bool)))

===
foreach-1
:error
===

(:foreach (i, item in m.items))

===
foreach-2
:error
===

(:foreach (item in m.items))

===
foreach-3
:error
===

(:foreach (i item in m.items))

===
foreach-4
===

(:foreach (i, item in m.items)
    [div]
    )

---

(source
    (expr
        (foreach
            index: (ident)
            item: (ident)
            iter:
                (field_access
                    object: (ident)
                    field: (ident))
            (body
                (element tag: (ident))))))

===
operator-1
===

(+ 1 m b)

---

(source
    (expr
        (operator)
        (literal_int)
        (ident)
        (ident)))

===
operator-2
===

(- 1 m)

---

(source
    (expr
        (operator)
        (literal_int)
        (ident)))

===
operator-3
===

(* 1 2)

---

(source
    (expr
        (operator)
        (literal_int)
        (literal_int)))

===
operator-4
===

(/ a b)

---

(source
    (expr
        (operator)
        (ident)
        (ident)))

